@startuml

 

skinparam style strictuml

 

actor "User" as user

participant "Administration menu" as mainmenu <<dialog>>

mainmenu++

 

user -> mainmenu : Clicks "View Products" button

create "ProductViewer" as viewer <<dialog>>

mainmenu -> viewer: Construct
viewer++

 

 

create "ProductDatabase" as productdatabase <<dao>>

viewer -> productdatabase : Construct
productdatabase++

participant "DbConnection" as dbconnection <<dao>>

productdatabase -> dbconnection++ : getDefaultConnectionUri()

dbconnection -> productdatabase : return DEFAULT_URI
productdatabase--

dbconnection--

 

database H2

create "SimpleListModel" as slm <<gui helper>>

viewer -> slm : Construct
viewer -> user: Display all products

user -> viewer : Clicks a category to filter by


viewer -> viewer : viewerCategoryBox.getSelectedItem()

viewer -> productdatabase++ : returnCategoryProducts(specifiedCategory)

productdatabase -> dbconnection++ : getConnectionUri(productUri)

 

dbconnection -> H2++ : getConnection()

H2 -> productdatabase : return connection

dbconnection--

H2--

productdatabase -> H2++ : prepareStatement(sql)
H2--

productdatabase -> productdatabase : stmt.setString(1, specifiedCategory)

productdatabase -> H2++ : executeQuery()

H2 -> productdatabase : Return result of query and put into ResultSet

H2--

productdatabase -> productdatabase : Get product details from ResultSet and put them into corresponding variables

productdatabase -> productdatabase : Add variables into an instance of product then add it to a list

 

productdatabase -> viewer : return products

productdatabase--

viewer -> slm++ : updateItems(product)
slm--

viewer -> viewer : viewerList.setModel(slm)

viewer -> user : Display products filtered by specific category
viewer--

 

 

@enduml
